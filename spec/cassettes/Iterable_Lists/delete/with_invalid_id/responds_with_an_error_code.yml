---
http_interactions:
- request:
    method: delete
    uri: https://api.iterable.com/api/lists/
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
      Host:
      - api.iterable.com
      Api-Key:
      - <ITERABLE_TOKEN>
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Date:
      - Sun, 01 Oct 2017 23:55:27 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '3021'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Request-Time:
      - '0'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Credentials:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Sun, 01 Oct 2017 23:55:27 GMT
- request:
    method: delete
    uri: https://api.iterable.com/api/lists/42
    body:
      encoding: UTF-8
      string: "{}"
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
      Host:
      - api.iterable.com
      Api-Key:
      - <ITERABLE_TOKEN>
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Date:
      - Sun, 01 Oct 2017 23:55:52 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '117'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Request-Time:
      - '59'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Credentials:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: '{"msg":"Unable to delete list 42 in Project 2158, which does not exist.","code":"BadParams","params":null}'
    http_version: 
  recorded_at: Sun, 01 Oct 2017 23:55:52 GMT
recorded_with: VCR 3.0.3
