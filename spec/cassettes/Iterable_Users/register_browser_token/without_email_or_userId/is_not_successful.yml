---
http_interactions:
- request:
    method: post
    uri: https://api.iterable.com/api/users/getFields
    body:
      encoding: UTF-8
      string: '{"email":"","browserToken":"12345678910"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
      Host:
      - api.iterable.com
      Api-Key:
      - <ITERABLE_TOKEN>  
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Date:
      - Fri, 06 Oct 2017 22:22:27 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '3065'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Request-Time:
      - '1'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Credentials:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Fri, 06 Oct 2017 22:22:27 GMT
- request:
    method: post
    uri: https://api.iterable.com/api/users/registerBrowserToken
    body:
      encoding: UTF-8
      string: '{"email":"","browserToken":"12345678910"}'
    headers:
      Accept:
      - application/json
      Content-Type:
      - application/json
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      User-Agent:
      - Ruby
      Host:
      - api.iterable.com
      Api-Key:
      - <ITERABLE_TOKEN>  
  response:
    status:
      code: 400
      message: Bad Request
    headers:
      Date:
      - Sat, 07 Oct 2017 00:09:08 GMT
      Content-Type:
      - application/json; charset=utf-8
      Content-Length:
      - '81'
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      Request-Time:
      - '5'
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Credentials:
      - 'true'
    body:
      encoding: ASCII-8BIT
      string: '{"msg":"Invalid email: ","code":"InvalidEmailAddressError","params":null}'
    http_version: 
  recorded_at: Sat, 07 Oct 2017 00:09:09 GMT
recorded_with: VCR 3.0.3
